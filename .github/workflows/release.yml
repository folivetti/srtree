name: srtools Release

on: 
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Github Release
    runs-on: windows-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  build_artifact:
    needs: [create_release]
    name: ${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }}
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows-latest]
        ghc:
          - 9.10.1
        cabal: ["3.14.1.1"]
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set tag name
        uses: olegtarasov/get-tag@v2.1
        id: tag
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1


          #- name: Install dependencies
          #uses: msys2/setup-msys2@v2
          #with:
          #install: pacman-mirrors pkg-config base-devel mingw-w64-x86_64-toolchain upx mingw-w64-x86_64-dlfcn git
          #update: false
      - name: Install nlopt
        run: |
          choco install nlopt
        # pacman -Sy --noconfirm mingw-w64-x86_64-nlopt
        # pacman -Ql mingw-w64-x86_64-nlopt

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Cache ~/.cabal/store
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-ghc-${{ matrix.ghc }}-${{ github.sha }}
          path: ~/.cabal/store

      - name: Build windows binary
        run: |
          mkdir dist
          cabal install exe:egraphGP --install-method=copy --overwrite-policy=always --installdir=dist --extra-lib-dirs=/mingw64/lib --extra-lib-dirs=/mingw64/bin --extra-include-dirs=/mingw64/include
          cabal install exe:egraphSearch --install-method=copy --overwrite-policy=always --installdir=dist --extra-lib-dirs=/mingw64/lib --extra-lib-dirs=/mingw64/bin --extra-include-dirs=/mingw64/include
          cabal install exe:srtools --install-method=copy --overwrite-policy=always --installdir=dist --extra-lib-dirs=/mingw64/lib --extra-lib-dirs=/mingw64/bin --extra-include-dirs=/mingw64/include
          cabal install exe:rEGGression --install-method=copy --overwrite-policy=always --installdir=dist --extra-lib-dirs=/mingw64/lib --extra-lib-dirs=/mingw64/bin --extra-include-dirs=/mingw64/include
          cabal install exe:srsimplify --install-method=copy --overwrite-policy=always --installdir=dist --extra-lib-dirs=/mingw64/lib --extra-lib-dirs=/mingw64/bin --extra-include-dirs=/mingw64/include
